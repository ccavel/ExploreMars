#Nettoyage de l'environement de travail
rm(list = ls())
#Import des données
data <- read.table("Data/Data.txt", header=TRUE)
#m0 <- data[,c("Genre","HabitudeTravaillerEnsemble","DifficulteTrouverRoche","BonneCommunication","PerformancePerso","PerformanceCoeq","EquilibreParole","EquilibreQuestions","BonneEquipe","habitudeGuider","HabitudeSeFaireGuider","SensOrientation","GeneVisionCoeq","PdCs","Module","TrouveRoche")]
m0 <- data[,c("Genre","HabitudeTravaillerEnsemble","DifficulteTrouverRoche","BonneCommunication","PerformancePerso","PerformanceCoeq","EquilibreParole","EquilibreQuestions","BonneEquipe","HabitudeGuider","HabitudeEtreGuider","SensOrientation","GeneVisionCoeq","PdCs","Module","Role","TrouveRoche")]
# Transforme toutes les variables qualtitatives en "factor" à la place de "int"
for(i in c("Genre","BonneCommunication","EquilibreParole","EquilibreQuestions","BonneEquipe","HabitudeGuider","HabitudeEtreGuider","SensOrientation","GeneVisionCoeq","Module","TrouveRoche")){
m0[,i]<-as.factor(m0[,i])
}
rm(i)
# Sépare creer deux matrices de donnée. Une pour les echecs, l'autre pour les réussites
m0.echecs <- m0[m0[,"TrouveRoche"]=="NON",]
m0.reussite <-m0[m0[,"TrouveRoche"]=="OUI",]
#Nettoyage de l'environement de travail
rm(list = ls())
#Import des données
data <- read.table("Data/Data.txt", header=TRUE)
#m0 <- data[,c("Genre","HabitudeTravaillerEnsemble","DifficulteTrouverRoche","BonneCommunication","PerformancePerso","PerformanceCoeq","EquilibreParole","EquilibreQuestions","BonneEquipe","habitudeGuider","HabitudeSeFaireGuider","SensOrientation","GeneVisionCoeq","PdCs","Module","TrouveRoche")]
m0 <- data[,c("Genre","HabitudeTravaillerEnsemble","DifficulteTrouverRoche","BonneCommunication","PerformancePerso","PerformanceCoeq","EquilibreParole","EquilibreQuestions","BonneEquipe","HabitudeGuider","HabitudeEtreGuider","SensOrientation","GeneVisionCoeq","PdCs","Module","Role","TrouveRoche")]
# Transforme toutes les variables qualtitatives en "factor" à la place de "int"
for(i in c("Genre","BonneCommunication","EquilibreParole","EquilibreQuestions","BonneEquipe","HabitudeGuider","HabitudeEtreGuider","SensOrientation","GeneVisionCoeq","Module","TrouveRoche")){
m0[,i]<-as.factor(m0[,i])
}
rm(i)
# Sépare creer deux matrices de donnée. Une pour les echecs, l'autre pour les réussites
m0.echecs <- m0[m0[,"TrouveRoche"]=="NON",]
m0.reussite <-m0[m0[,"TrouveRoche"]=="OUI",]
#Ceci est le premier script à lancer à la lecture du projet.
#Il gère les librairies, et la préparation des variables.
#Installation des librairies
install.packages("ClustOfVar")
install.packages("PCAmixdata")
install.packages("dplyr")
library(ClustOfVar)
library(PCAmixdata)
library("dplyr")
#Nettoyage de l'environement de travail
rm(list = ls())
#Import des data
data <- read.table("cestlebon.txt", header=TRUE)
#m0 est la matrice dans laquelle les variables qualitatives et quantitatives ont été choisies et mis sous le bon format.
m0 <- data[,c("Genre","HabitudeTravaillerEnsemble","DifficulteTrouverRoche","BonneCommunication","PerformancePerso","PerformanceCoeq","EquilibreParole","EquilibreQuestions","BonneEquipe","habitudeGuider","HabitudeSeFaireGuider","SensOrientation","GeneVisionCoeq","PdCs","Module","Role","TrouveRoche")]
str(m0)
# Transforme toutes les variables qualtitatives en "factor" à la place de "int"
for(i in c("Genre","BonneCommunication","EquilibreParole","EquilibreQuestions","BonneEquipe","habitudeGuider","HabitudeSeFaireGuider","SensOrientation","GeneVisionCoeq","Module","Role","TrouveRoche")){
m0[,i]<-as.factor(m0[,i])
}
rm(i)
str(m0)
# Sépare creer deux matrices de donnée. Une pour les echecs, l'autre pour les réussites
m0.echecs <- m0[m0[,"TrouveRoche"]==0,]
m0.reussite <-m0[m0[,"TrouveRoche"]==1,]
Nettoyage de l'environement de travail
rm(list = ls())
#Import des data
data <- scan("cestlebon.txt", header=TRUE)
#m0 est la matrice dans laquelle les variables qualitatives et quantitatives ont été choisies et mis sous le bon format.
m0 <- data[,c("Genre","HabitudeTravaillerEnsemble","DifficulteTrouverRoche","BonneCommunication","PerformancePerso","PerformanceCoeq","EquilibreParole","EquilibreQuestions","BonneEquipe","habitudeGuider","HabitudeSeFaireGuider","SensOrientation","GeneVisionCoeq","PdCs","Module","Role","TrouveRoche")]
str(m0)
# Transforme toutes les variables qualtitatives en "factor" à la place de "int"
for(i in c("Genre","BonneCommunication","EquilibreParole","EquilibreQuestions","BonneEquipe","habitudeGuider","HabitudeSeFaireGuider","SensOrientation","GeneVisionCoeq","Module","Role","TrouveRoche")){
m0[,i]<-as.factor(m0[,i])
}
rm(i)
str(m0)
# Sépare creer deux matrices de donnée. Une pour les echecs, l'autre pour les réussites
m0.echecs <- m0[m0[,"TrouveRoche"]==0,]
m0.reussite <-m0[m0[,"TrouveRoche"]==1,]
rm(list = ls())
#Import des data
data <- scan("cestlebon.txt", header=TRUE)
#m0 est la matrice dans laquelle les variables qualitatives et quantitatives ont été choisies et mis sous le bon format.
m0 <- data[,c("Genre","HabitudeTravaillerEnsemble","DifficulteTrouverRoche","BonneCommunication","PerformancePerso","PerformanceCoeq","EquilibreParole","EquilibreQuestions","BonneEquipe","habitudeGuider","HabitudeSeFaireGuider","SensOrientation","GeneVisionCoeq","PdCs","Module","Role","TrouveRoche")]
str(m0)
# Transforme toutes les variables qualtitatives en "factor" à la place de "int"
for(i in c("Genre","BonneCommunication","EquilibreParole","EquilibreQuestions","BonneEquipe","habitudeGuider","HabitudeSeFaireGuider","SensOrientation","GeneVisionCoeq","Module","Role","TrouveRoche")){
m0[,i]<-as.factor(m0[,i])
}
rm(i)
str(m0)
# Sépare creer deux matrices de donnée. Une pour les echecs, l'autre pour les réussites
m0.echecs <- m0[m0[,"TrouveRoche"]==0,]
m0.reussite <-m0[m0[,"TrouveRoche"]==1,]
#Import des data
data <- scan("cestlebon.txt", header=TRUE)
read.table
#Import des data
data <- read.table("cestlebon.txt", header=TRUE)
#Import des data
data <- read.table("Data/Data.txt", header=TRUE)
m0 <- data[,c("Genre","HabitudeTravaillerEnsemble","DifficulteTrouverRoche","BonneCommunication","PerformancePerso","PerformanceCoeq","EquilibreParole","EquilibreQuestions","BonneEquipe","habitudeGuider","HabitudeSeFaireGuider","SensOrientation","GeneVisionCoeq","PdCs","Module","Role","TrouveRoche")]
m0 <- data[,c("Genre","HabitudeTravaillerEnsemble","DifficulteTrouverRoche","BonneCommunication","PerformancePerso","PerformanceCoeq","EquilibreParole","EquilibreQuestions","BonneEquipe","habitudeGuider","HabitudeSeFaireGuider","SensOrientation","GeneVisionCoeq","PdCs","Module","Role","TrouveRoche")]
m0 <- data[,c("Genre","HabitudeTravaillerEnsemble","DifficulteTrouverRoche","BonneCommunication","PerformancePerso","PerformanceCoeq","EquilibreParole","EquilibreQuestions","BonneEquipe","habitudeGuider","HabitudeSeFaireGuider","SensOrientation","GeneVisionCoeq","PdCs","Module","Role","TrouveRoche")]
m0 <- data[,c("Genre	", "HabitudeTravaillerEnsemble", "DifficulteTrouverRoche", "QualificationTravailEquipe", "BonneCommunication", "PerformancePerso", "PerformanceCoeq", "EquilibreParole", "EquilibreQuestions", "BonneEquipe", "HabitudeGuider", "HabitudeEtreGuider", "SensOrientation", "GeneVisionCoeq", "PdCs", "Module", "Role", "ChronoSec", "TrouveRoche")]
m0 <- data[,c("Genre", "HabitudeTravaillerEnsemble", "DifficulteTrouverRoche", "QualificationTravailEquipe", "BonneCommunication", "PerformancePerso", "PerformanceCoeq", "EquilibreParole", "EquilibreQuestions", "BonneEquipe", "HabitudeGuider", "HabitudeEtreGuider", "SensOrientation", "GeneVisionCoeq", "PdCs", "Module", "Role", "ChronoSec", "TrouveRoche")]
str(m0)
# Transforme toutes les variables qualtitatives en "factor" à la place de "int"
for(i in c("Genre","BonneCommunication","EquilibreParole","QualificationTravailEquipe","EquilibreQuestions","BonneCommunication","habitudeGuider","HabitudeSeFaireGuider","SensOrientation","GeneVisionCoeq","Module","Role","TrouveRoche")){
m0[,i]<-as.factor(m0[,i])
}
# Transforme toutes les variables qualtitatives en "factor" à la place de "int"
for(i in selectedVar ){
m0[,i]<-as.factor(m0[,i])
}
selectedVar <- c("Genre", "HabitudeTravaillerEnsemble", "DifficulteTrouverRoche", "QualificationTravailEquipe", "BonneCommunication", "PerformancePerso", "PerformanceCoeq", "EquilibreParole", "EquilibreQuestions", "BonneEquipe", "HabitudeGuider", "HabitudeEtreGuider", "SensOrientation", "GeneVisionCoeq", "PdCs", "Module", "Role", "ChronoSec", "TrouveRoche")
m0 <- data[,selectedVar]
str(m0)
# Transforme toutes les variables qualtitatives en "factor" à la place de "int"
for(i in selectedVar ){
m0[,i]<-as.factor(m0[,i])
}
rm(i)
str(m0)
# Sépare creer deux matrices de donnée. Une pour les echecs, l'autre pour les réussites
m0.echecs <- m0[m0[,"TrouveRoche"]==0,]
m0.reussite <-m0[m0[,"TrouveRoche"]==1,]
#Ce script nécessite l'utilisation préalable de PreparationVariables.R
#Ici sont effectuées des ACP sur une série de variables qualitatives et quantitatives.
#"res.pca<-PCAmix(X.quali = m0[,c("Genre","BonneCommunication","EquilibreParole","EquilibreQuestions","BonneEquipe","habitudeGuider","HabitudeSeFaireGuider","SensOrientation","GeneVisionCoeq","Module","Role","TrouveRoche")],
#                X.quanti = m0[,c("DifficulteTrouverRoche","PerformancePerso","PerformanceCoeq","PdCs")],rename.level=TRUE)
res.pca<-PCAmix(X.quali = m0[,c("Genre","BonneCommunication","EquilibreParole","EquilibreQuestions","BonneEquipe","habitudeGuider","HabitudeSeFaireGuider","SensOrientation","GeneVisionCoeq","Module","Role")],
X.quanti = m0[,c("DifficulteTrouverRoche","PerformancePerso","PerformanceCoeq","PdCs")],rename.level=TRUE)
#Informations sur les dimentions
barplot(res.pca$eig[,1],main="Eigvalues",names.arg = 1:nrow(res.pca$eig))
abline(h=1,col=2,lwd=2)
round(res.pca$eig,digit=3)
res.pca$ind$contrib.pct
res.pca$quanti$contrib.pct
res.pca$quali$contrib.pct
#mpca<-cbind(m0,res.pca$ind$contrib.pct[,1:3])
#Visualisation
#aide coloration : https://cran.r-project.org/web/packages/PCAmixdata/vignettes/PCAmixdata.html
plot(res.pca, axes=c(1,2),choice = "ind", coloring.ind=m0$TrouveRoche)
plot(res.pca, axes=c(1,3),choice = "ind", coloring.ind=m0$TrouveRoche)
plot(res.pca, axes=c(1,4),choice = "ind", coloring.ind=m0$TrouveRoche)
plot(res.pca, axes=c(1,2),choice = "cor")
plot(res.pca, axes=c(1,2),choice = "levels")
#Même travail en séparant les échecs et les réussites
#   ---Echecs :
res.pca.echecs<-PCAmix(X.quali = m0.echecs[,c("Genre","BonneCommunication","EquilibreParole","EquilibreQuestions","BonneEquipe","habitudeGuider","HabitudeSeFaireGuider","SensOrientation","GeneVisionCoeq","Module","Role")],
X.quanti = m0.echecs[,c("DifficulteTrouverRoche","PerformancePerso","PerformanceCoeq","PdCs")],rename.level=TRUE)
barplot(res.pca.echecs$eig[,1],main="Eigvalues",names.arg = 1:nrow(res.pca.echecs$eig))
abline(h=1,col=2,lwd=2)
round(res.pca.echecs$eig,digit=3)
res.pca.echecs$ind$contrib.pct
res.pca.echecs$quanti$contrib.pct
res.pca.echecs$quali$contrib.pct
plot(res.pca.echecs, axes=c(1,2),choice = "ind")
plot(res.pca.echecs, axes=c(1,3),choice = "ind")
plot(res.pca.echecs, axes=c(1,4),choice = "ind")
plot(res.pca.echecs, axes=c(1,2),choice = "cor")
plot(res.pca.echecs, axes=c(1,2),choice = "levels")
#   ---Réussites :
res.pca.reussite<-PCAmix(X.quali = m0.reussite[,c("Genre","BonneCommunication","EquilibreParole","EquilibreQuestions","BonneEquipe","habitudeGuider","HabitudeSeFaireGuider","SensOrientation","GeneVisionCoeq","Module","Role")],
X.quanti = m0.reussite[,c("DifficulteTrouverRoche","PerformancePerso","PerformanceCoeq","PdCs")],rename.level=TRUE)
barplot(res.pca.reussite$eig[,1],main="Eigvalues",names.arg = 1:nrow(res.pca.reussite$eig))
abline(h=1,col=2,lwd=2)
round(res.pca.reussite$eig,digit=3)
res.pca.reussite$ind$contrib.pct
res.pca.reussite$quanti$contrib.pct
res.pca.reussite$quali$contrib.pct
plot(res.pca.reussite, axes=c(1,2),choice = "ind")
plot(res.pca.reussite, axes=c(1,3),choice = "ind")
plot(res.pca.reussite, axes=c(1,4),choice = "ind")
plot(res.pca.reussite, axes=c(1,2),choice = "cor")
plot(res.pca.reussite, axes=c(1,2),choice = "levels")
res.pca<-PCAmix(X.quali = m0[,c("Genre","BonneCommunication","EquilibreParole","EquilibreQuestions","BonneEquipe","habitudeGuider","HabitudeSeFaireGuider","SensOrientation","GeneVisionCoeq","Module","Role")],
X.quanti = m0[,c("DifficulteTrouverRoche","PerformancePerso","PerformanceCoeq","PdCs")],rename.level=TRUE)
View(m0)
selectedVar <- c("Genre", "HabitudeTravaillerEnsemble", "DifficulteTrouverRoche", "QualificationTravailEquipe", "BonneCommunication",
"PerformancePerso", "PerformanceCoeq", "EquilibreParole", "EquilibreQuestions", "BonneEquipe", "HabitudeGuider",
"HabitudeEtreGuider", "SensOrientation", "GeneVisionCoeq", "PdCs", "Module", "Role", "TrouveRoche")
qualiVar <- c("Genre", "HabitudeTravaillerEnsemble","QualificationTravailEquipe","BonneCommunication","EquilibreParole", "EquilibreQuestions",
"BonneEquipe","HabitudeGuider", "HabitudeEtreGuider","SensOrientation","GeneVisionCoeq","Module", "Role","TrouveRoche")
quantiVar <- c("DifficulteTrouverRoche","PerformancePerso", "PerformanceCoeq","PdCs")
res.pca<-PCAmix(X.quali = m0[,qualiVar],
X.quanti = m0[,quantiVar],rename.level=TRUE)
class(m0[,quantiVar[1]])
#Import des data
data <- read.table("Data/Data.txt", header=TRUE)
selectedVar <- c("Genre", "HabitudeTravaillerEnsemble", "DifficulteTrouverRoche", "QualificationTravailEquipe", "BonneCommunication",
"PerformancePerso", "PerformanceCoeq", "EquilibreParole", "EquilibreQuestions", "BonneEquipe", "HabitudeGuider",
"HabitudeEtreGuider", "SensOrientation", "GeneVisionCoeq", "PdCs", "Module", "Role", "TrouveRoche")
qualiVar <- c("Genre", "HabitudeTravaillerEnsemble","QualificationTravailEquipe","BonneCommunication","EquilibreParole", "EquilibreQuestions",
"BonneEquipe","HabitudeGuider", "HabitudeEtreGuider","SensOrientation","GeneVisionCoeq","Module", "Role","TrouveRoche")
quantiVar <- c("DifficulteTrouverRoche","PerformancePerso", "PerformanceCoeq","PdCs")
m0 <- data[,selectedVar]
str(m0)
# Transforme toutes les variables qualtitatives en "factor" à la place de "int"
for(i in qualiVar ){
m0[,i]<-as.factor(m0[,i])
}
rm(i)
str(m0)
# Sépare creer deux matrices de donnée. Une pour les echecs, l'autre pour les réussites
m0.echecs <- m0[m0[,"TrouveRoche"]==0,]
m0.reussite <-m0[m0[,"TrouveRoche"]==1,]
# Sépare creer deux matrices de donnée. Une pour les echecs, l'autre pour les réussites
m0.echecs <- m0[m0[,"TrouveRoche"]=="NON",]
m0.reussite <-m0[m0[,"TrouveRoche"]=="OUI",]
res.pca<-PCAmix(X.quali = m0[,qualiVar],
X.quanti = m0[,quantiVar],rename.level=TRUE)
res.pca<-PCAmix(X.quali = m0[,qualiVar],
X.quanti = m0[,quantiVar],rename.level=TRUE)
#Informations sur les dimentions
barplot(res.pca$eig[,1],main="Eigvalues",names.arg = 1:nrow(res.pca$eig))
abline(h=1,col=2,lwd=2)
round(res.pca$eig,digit=3)
res.pca$ind$contrib.pct
res.pca$quanti$contrib.pct
res.pca$quali$contrib.pct
plot(res.pca, axes=c(1,2),choice = "ind", coloring.ind=m0$TrouveRoche)
plot(res.pca, axes=c(1,3),choice = "ind", coloring.ind=m0$TrouveRoche)
plot(res.pca, axes=c(1,4),choice = "ind", coloring.ind=m0$TrouveRoche)
plot(res.pca, axes=c(1,2),choice = "cor")
plot(res.pca, axes=c(1,2),choice = "levels")
#Même travail en séparant les échecs et les réussites
#   ---Echecs :
res.pca.echecs<-PCAmix(X.quali = m0.echecs[,qualiVar],
X.quanti = m0.echecs[,quantiVar],rename.level=TRUE)
#Même travail en séparant les échecs et les réussites
#   ---Echecs :
res.pca.echecs<-PCAmix(X.quali = m0.echecs[,qualiVar],
X.quanti = m0.echecs[,quantiVar],rename.level=TRUE)
res.pca.reussite<-PCAmix(X.quali = m0.reussite[,c("Genre","BonneCommunication","EquilibreParole","EquilibreQuestions","BonneEquipe","habitudeGuider","HabitudeSeFaireGuider","SensOrientation","GeneVisionCoeq","Module","Role")],
X.quanti = m0.reussite[,c("DifficulteTrouverRoche","PerformancePerso","PerformanceCoeq","PdCs")],rename.level=TRUE)
res.pca.reussite<-PCAmix(X.quali = m0.reussite[,qualiVar],
X.quanti = m0.reussite[,quantiVar],rename.level=TRUE)
#Même travail en séparant les échecs et les réussites
#   ---Echecs :
tree.echecs <- hclustvar(X.quali = m0.echecs[,qualiVar],
X.quanti = m0.echecs[,quantiVar])
tree <- hclustvar(X.quali = m0[,qualiVar],
X.quanti = m0[,quantiVar])
plot(tree)
stability(tree,B=40)
part <- cutreevar(tree,4)
print(part)
summary(part)
#Même travail en séparant les échecs et les réussites
#   ---Echecs :
tree.echecs <- hclustvar(X.quali = m0.echecs[,qualiVar],
X.quanti = m0.echecs[,quantiVar])
